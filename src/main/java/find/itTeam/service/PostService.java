package find.itTeam.service;

import find.itTeam.dto.CreatePost;
import find.itTeam.entity.PostEntity;
import find.itTeam.repository.PostRepository;
import lombok.Data;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import java.util.Optional;

@Service
@Data
public class PostService {
    private final PostRepository postRepository;

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞
     *
     * @param post –ø–æ—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—Ç —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
     * @return —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø–æ—Å—Ç
     */
    public ResponseEntity<?> createNewPost(CreatePost post) {
        PostEntity newPost = new PostEntity()
                .setContent(post.getContent())
                .setDateTime(post.getDateTime())
                .setPostStatus(post.getPostStatus());

        postRepository.save(newPost);
        return ResponseEntity.status(HttpStatus.OK).body(newPost);
    }

    /**
     * –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ—Å—Ç–∞
     *
     * @param post –ø–æ—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
     * @return –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–π –ø–æ—Å—Ç
     */
    public ResponseEntity<?> updatePost(CreatePost post, Long id) {
        Optional<PostEntity> postEntity = postRepository.findById(id);
        if (!postEntity.isPresent()) {
            // –î–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ, –ø–æ–∫–∞ –ø–æ—Å—Ç–∞ —Å —Ç–∞–∫–∏–º ID –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("üò∞–°–µ–π –ø–æ—Å—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç...üò∞");
        }

        if (post.getContent().equals("") || post.getDateTime() == null || post.getPostStatus().equals("")) {
            return ResponseEntity
                    .status(HttpStatus.BAD_REQUEST)
                    .body("fail");

        }

        postRepository.updateById(post.getContent(), post.getDateTime(), post.getPostStatus(), id);
        return ResponseEntity
                .status(HttpStatus.OK)
                .body(String.format("Updated post %s", id));
    }

    /**
     * –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ –ø–æ id
     *
     * @param postId id –ø–æ—Å—Ç–∞
     */
    public ResponseEntity<?> deletePost(Long postId) {
        postRepository.deleteById(postId);
        return ResponseEntity.status(HttpStatus.OK).body("Post deleted!");
    }
}


